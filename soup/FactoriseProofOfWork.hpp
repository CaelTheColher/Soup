#pragma once

#include <cstdint>
#include <string>

#include "base.hpp"

NAMESPACE_SOUP
{
	// Appropriate difficulty for this method is around 22.

	// The challenge must be unique & generated by a trusted party for this to have any sort of security.
	// Even better if the challenge is bound to a particular client and time-limited so they can't be stockpiled.

	struct FactoriseProofOfWork
	{
		[[nodiscard]] static std::string createChallenge(uint8_t difficulty);
		[[nodiscard]] static std::string solve(const std::string& challenge);
		[[nodiscard]] static bool verify(const std::string& challenge, const std::string& solution);
	};
}
